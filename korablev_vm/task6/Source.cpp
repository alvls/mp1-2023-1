/*
Разработать систему классов и реализовать с ее помощью игру Змейка.
Требования (правила):
	Играет один игрок (человек), управляющий «змейкой».
	Игра идет на прямоугольном поле N x M клеток. Поле ограничено «стенами» так что вместе со стенами размер поля – (N + 2) x (M + 2) клеток.
	При старте игры змейка имеет длину 5 клеток, форму в виде горизонтального отрезка и располагается в произвольном месте поля, не пересекая и не касаясь стен.
	При старте игры «голова» змейки располагается слева, «хвост» справа. Голова змейки окрашена в цвет, отличный от цвета остальных клеток ее тела.
	При старте игры в произвольной клетке поля (не совпадающей с клетками, занятыми змейкой) возникает «пища».
	При запуске игрового процесса (по специальной команде или автоматически при старте игры) змейка начинает автоматическое движение влево с некоторой заданной скоростью.
	Движение заключается в том, что за каждый такт голова змейки перемещается на одну клетку в текущем направлении движения, а клетка, в которой располагался хвост, становится пустой.
	Игрок может сменить направление движения змейки с помощью клавиш-«стрелок» (вверх, вниз, влево, вправо).
	Если на текущем такте движения голова змейки должна будет занять клетку стены или клетку, которая уже занята любой из клеток ее тела, игра прекращается и считается проигранной.
	Задача игрока вырастить змейку до заданного при старте игрового процесса размера. Змейка вырастает в длину на одну клетку (с хвоста) при каждом поглощении пищи, т.е. в тот момент, 
	когда ее голова на очередном такте движения занимает клетку, в которой расположена пища. На этом же такте в произвольном месте игрового поля (не совпадающей с клетками, занятыми змейкой) снова появляется пища.
	Если змейка выросла до заданной при старте игрового процесса длины, игра считается выигранной.
*/
#include "Header.h"
int main()
{
	int w_size, width, height;
	bool game_end = false;
	int end_menu;
	setlocale(LC_ALL, "Rus");
	system("chcp 1251");
	system("title Змейка - 2D game");
	system("cls");
	hidecursor();
	hello();
	system("pause");
	system("cls");
	string end_game[] = { "\t\tВыберите дальнейшее действие", "> новая игра", "> выйти из игры" };
	do
	{
		cout << "Введите ширину поля (больше 7): ";
		cin >> width;
		cout << endl;
	} while (width < 8);
	do
	{
		cout << "Введите высоту поля (больше 3): ";
		cin >> height;
		cout << endl;
	} while (height < 4);
	do
	{
		cout << "Введите победную длину змейки (больше 5): ";
		cin >> w_size;
		cout << endl;
	} while (w_size < 6);
	Game clear(w_size,width, height);
	while (!game_end)
	{
		Game game = clear;
		system("cls");
		game.start_game();
		system("pause");
		end_menu = menu_mode(end_game, 3);
		switch (end_menu)
		{
		case NEWGAME:
			break;
		case EXIT:
			exit_prog();
		}
	}
}